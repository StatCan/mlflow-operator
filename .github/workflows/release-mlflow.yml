# This workflow will build a docker container, publish it to Azure Container Registry, and deploy it to Azure Kubernetes Service using a helm chart.
#
# https://github.com/Azure/actions-workflow-samples/tree/master/Kubernetes
#
# To configure this workflow:
#
# 1. Set up the following secrets in your workspace:
#     a. REGISTRY_USERNAME with ACR username
#     b. REGISTRY_PASSWORD with ACR Password
#     c. AZURE_CREDENTIALS with the output of `az ad sp create-for-rbac --sdk-auth`
#
# 2. Change the values for the REGISTRY_NAME, CLUSTER_NAME, CLUSTER_RESOURCE_GROUP and NAMESPACE environment variables (below).
name: release mlflow
on:
  push:
    branches:
      - master
    paths:
      - mlflow/**
      - .github/workflows/build-mlflow.yml
      - .github/workflows/release-mlflow.yml

# Environment variables available to all jobs and steps in this workflow
env:
  REGISTRY_NAME: k8scc01covidacr
  CLUSTER_NAME: k8s-cancentral-02-covid-aks
  CLUSTER_RESOURCE_GROUP: k8s-cancentral-01-covid-aks
  STORAGE_ACCOUNT_NAME: k8scovid
  NAMESPACE: web
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master

    # Connect to Azure Container registry (ACR)
    - uses: azure/docker-login@v1
      with:
        login-server: ${{ env.REGISTRY_NAME }}.azurecr.io
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    # Container build and push to a Azure Container registry (ACR)
    - run: |
        cd mlflow
        docker build -f Dockerfile -t ${{ env.REGISTRY_NAME }}.azurecr.io/mlflow:${{ github.sha }} .
        docker push ${{ env.REGISTRY_NAME }}.azurecr.io/mlflow:${{ github.sha }}

    # Scan image for vulnerabilities
    # - uses: Azure/container-scan@v0
    #   with:
    #     image-name: ${{ env.REGISTRY_NAME }}.azurecr.io/mlflow:${{ github.sha }}
    #     severity-threshold: CRITICAL
    #     run-quality-checks: false

    # Clone the Helm chart
    - run: |
        git clone https://github.com/statcan/charts.git
        mkdir -p /home/runner/work/_temp/_github_home/
        echo ${{ secrets.KUBECONFIG }} | base64 --decode > /home/runner/work/_temp/_github_home/KUBECONFIG

    # Deploy Helm chart
    - uses: 'statcan/actions/helm@master'
      env:
        KUBECONFIG: /github/home/KUBECONFIG
      with:
        release: 'mlflow'
        namespace: 'mlflow'
        chart: './charts/stable/mlflow'
        token: '${{ github.token }}'
        values: |
          image:
            repository: "${{ env.REGISTRY_NAME }}.azurecr.io/mlflow"
            tag: "${{ github.sha }}"
          ingress:
            enabled: false
            hosts:
              - host: "mlflow.${{ secrets.DOMAIN_NAME }}"
                paths:
                  - "/*"
            annotations:
              kubernetes.io/ingress.class: istio
          imagePullSecrets:
            - name: "${{ env.REGISTRY_NAME }}-registry-connection"
          persistence:
            enabled: true
            storageClass: "managed-premium"
            annotations: {}
            accessMode: ReadWriteOnce
            size: 5Gi
          volumes:
            - name: files-mlflow
              persistentVolumeClaim:
                claimName: mlflow-managed-disk
          volumeMounts:
            - name: files-mlflow
              mountPath: /mnt/mlruns
          azure:
            enabled: true
            storageaccountartifact: ${{ secrets.STORAGE_ACCOUNT_ARTIFACT }}
            storageaccountkey: ${{ secrets.STORAGE_ACCOUNT_KEY }}

    # Run Kustomize
    - name: kustomize
      uses: statcan/actions/kubectl@master
      with:
        kubeconfig: ${{ secrets.KUBECONFIG }}
        args: apply -k .
        dir: mlflow
      env:
        MLFLOW_OIDC_CLIENT: ${{ secrets.MLFLOW_OIDC_CLIENT }}
        MLFLOW_OIDC_SECRET: ${{ secrets.MLFLOW_OIDC_SECRET }}
        MLFLOW_OIDC_DISCOVERY: ${{ secrets.MLFLOW_OIDC_DISCOVERY }}
        MLFLOW_JWT_JWKS: ${{ secrets.MLFLOW_JWT_JWKS }}
        MLFLOW_ADMIN_POLICY_GROUP: ${{ secrets.MLFLOW_ADMIN_POLICY_GROUP }}
        MLFLOW_POLICY_GROUP: ${{ secrets.MLFLOW_POLICY_GROUP }}
        MLFLOW_DOMAIN_NAME: ${{ secrets.MLFLOW_DOMAIN_NAME }}
